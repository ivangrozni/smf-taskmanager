#+TITLE: Handout za Delegator delavnico
* Delegator delavnica
** PHP osnove
*** Splošno
    - dokaj C-jevska sintaksa (sicer enostavnejša)
    - .php datoteko začnemo s <?php tagom, opcionalno zaključimo z ?>

      #+BEGIN_SRC php
      <?php
            program;
            in_to;
      ?>
      #+END_SRC

    - { } za definicije blokov (funkcij, teles kontrolnih struktur...)
    - ; konec stavkov
      
      #+BEGIN_SRC php
      klic_funkcije();
      #+END_SRC

    - Komentarji

      #+BEGIN_SRC php
      koda; // Enovrstični komentar
      /*
          večvrstični
          komentar
      */
      #+END_SRC

    - include "imedatoteke.php";

      Include vključi (požene) kodo iz poljubne datoteke
*** Podatkovne strukture
**** Skalarni tip (spremenljvika z eno vrednostjo)

     #+BEGIN_SRC php
     $spremenljivka = "vrednost";
     #+END_SRC

     #+BEGIN_SRC php
     print_r($spremenljivka); // izpiše "vrednost"
     #+END_SRC

***** Tipi skalarjev
      - Besedilo (string)

        #+BEGIN_SRC php
        'Dobeseden tekst', "Tekst s spremenljivko: $stevilo"
        #+END_SRC

      - Število (integer) - celo število

        #+BEGIN_SRC php
        0, 42, -123 ...
        #+END_SRC

      - Decimalno število (float)

        #+BEGIN_SRC php
        0.5, -12.952 ...
        #+END_SRC

      - Binarna vrednost (boolean)

        #+BEGIN_SRC php
        true / false
        #+END_SRC

      - Ničelna vrednost

        #+BEGIN_SRC php
        null
        #+END_SRC
        
      - V skalar lahko tudi shranimo funkcijo

        #+BEGIN_SRC php
        $opravilo = function() {
            izvedi;
        }
        $opravilo();
        #+END_SRC
**** Konstante
     - nespremenljive

       #+BEGIN_SRC php
       define("IMEKONSTANTE", vrednost);
       #+END_SRC
**** Polje (array)
    - Vsebuje zaporeden seznam vrednosti kateregakoli tipa (kot pri skalarjih)
    - Dostop do elementov z zaporednim številom, začenši z 0

      #+BEGIN_SRC php
      $polje = [1, "dva", 3];
      $polje[1] vsebuje 1
      $polje[2] vsebuje "dva"
      #+END_SRC
**** Asociativno polje (associative array)
    - Seznam vrednosti, indeksiran z vrednostmi kateregakoli tipa

      #+BEGIN_SRC php
      $asociativno_polje = [
            "kljuc" => "vrednost!",
            1001 => true
      ];
      $asociativno_polje["kljuc"]; // "vrednost!"
      $asociativno_polje[1001]; // true
      #+END_SRC

*** Kontrolne strukture
**** If stavki
     #+BEGIN_SRC php
     if (pogoj) posledica else drugaposledica;
     #+END_SRC

     #+BEGIN_SRC php
     if (pogoj) {
         posledica;
     } elseif (drugpogoj) {
         drugaposledica;
     } else {
         nekajtretjega;
     }
     #+END_SRC

     #+BEGIN_SRC php
     if (pogoj):
         razne;
         stvari;
     else:
         drugo;
     endif;
     #+END_SRC

**** While zanke
     #+BEGIN_SRC php
     while (pogoj) {
         ponavljaj;
     }
     #+END_SRC
     
     #+BEGIN_SRC php
     do {
         ponavljaj;
     } while (pogoj);
     #+END_SRC

     #+BEGIN_SRC php
     while (pogoj):
         ponavljaj;
     endwhile;
     #+END_SRC

**** For zanke
     #+BEGIN_SRC php
     for ($i = 0; $i < 3; $i++) {
         ponovi;     // Ponovi 3x
     }
     #+END_SRC

     #+BEGIN_SRC php
     $stevec = [1, 2, 3, 4];
     foreach ($stevec as $stevilo) {
         print_r("$stevilo!\n");
     }
     #+END_SRC

     #+BEGIN_SRC php
     $polje = [
         "kljuc" => "vrednost",
         "drugo" => "tretje"
     ];
     foreach ($polje as $kljuc => $vrednost) {
         print_r("vrednost " . $kljuc . ": " . $vrednost . "\n");
     }
     #+END_SRC

*** Funkcije
     #+BEGIN_SRC php
     function imeFunkcije ($argument, &$referencniArgument) {
         telo_funkcije;
         $vrednost = "primer";
         return $vrednost;
     }
     #+END_SRC

     #+BEGIN_SRC php
     function sestej ($prvo, $drugo) {
         return $prvo + $drugo + 2;
     }
     sestej(2, 3); // Vrne 7
     #+END_SRC

** Seznam php funkcij
 - die();

** SMF
*** Spremenljivke
    [[http://wiki.simplemachines.org/smf/Global_variables][SMF variable]]

    - ~$context~ (items for template)
    - ~$txt~ (prevodi)
    - ~$scripturl~
    - ~$settings~ (global theme settings)
    - ~$sourcedir~ (absolute path to Sources directory)
    - ~$smcFunc~ (Funkcije)


*** Seznam SMF funkcij
    [[http://dev.simplemachines.org/smcfunctions.php][SMF Funkcije]]

    Primer klica:
    ~$smcFunc['arugment'](parameter odvisen od arugmenta)~

    Argumenti za poizvedbe v bazo:
    - ~db_query~ (SQL poizvedba) - poizvedba v bazo ~SELECT~, ~SELECT COUNT()~, ~INSERT~, ~UPDATE~, ~DELETE~
      primer: 
      #+NAME: db_query
      #+BEGIN_SRC php 
     $request = $smcFunc['db_query']('', '
            SELECT id_proj FROM {db_prefix}tasks
            WHERE id = {int:id_task}', array('id_task' => $id_task) );
      #+END_SRC
    - ~db_insert~ (SQL poizvedba)
    - ~db_fetch_assoc~ (~$request~)
      primer:
      #+NAME: db_fetch_assoc
      #+BEGIN_SRC php 
     $row = $smcFunc['db_fetch_assoc']($request);
      #+END_SRC
    - ~db_free_results~ (~$request~) - narediš kar tako, da sprostiš nek spomin, al kaj
    - ~html_specialchars~ - (~string~) zaščita pred SQL injekcijami
    - ~html_trim~ - (~string~) zaščita pred SQL injekcijami

    Ostale funckije:
     - ~checkSession()~ - preveri, če je uporabnik pravi

*** Struktura Moda

    datoteke:
    - ~package-info.xml~
    - ~modification.xml~
    - ~database.php~
    - ~Delegator.php~
    - ~Delegator.template.php~
    - ~delegator_helpers.php~    
    - ~delegator.js~
    - ~moment.min.js~
    - ~pikaday.css~    
    - ~pikaday.jquery.js~
    - ~pikaday.js~    
